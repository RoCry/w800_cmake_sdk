#!/bin/bash

#
# !!! Notice !!!
# This script must be called in project's 'build' dir
# So the 'TOP_DIR=..'
#
TOP_DIR=..
DST_DIR=${TOP_DIR}/@FIRMWARE_OUT_DIR_NAME@

W800_TOOLS_DIR=${TOP_DIR}/@W800_TOOLS_DIR@
WM_TOOL=${DST_DIR}/wm_tool

if [ ! "@MSYS_BIN_PATH_FOR_BUILD_DIR@"x = "x" ]; then
  export PATH=@MSYS_BIN_PATH_FOR_BUILD_DIR@:$PATH
fi

ProjName="@CMAKE_PROJECT_NAME@"
signature=@CONFIG_W800_IMAGE_SIGN@
sign_pubkey_src=0
prikey_sel=@CONFIG_W800_PRIKEY_SEL@
code_encrypt=@CONFIG_W800_CODE_ENCRYPT@
img_type=@CONFIG_W800_IMAGE_TYPE@
zip_type=1

sec_img_header=8002000
sec_img_pos=8002400

run_img_header=@CONFIG_W800_IMAGE_HEADER_ADDR@
run_img_pos=@CONFIG_W800_IMAGE_APP_ADDR@
upd_img_pos=@CONFIG_W800_IMAGE_OTA_ADDR@

#
# start make
#

# gen enc key
enc_key_str="@CONFIG_W800_CODE_ENCRYPT_KEY@"
for chr in $(echo $enc_key_str | sed 's/./& /g')
do
  CODE_ENCRYPT_KEY=$CODE_ENCRYPT_KEY$(printf "%02X" "'$chr")
done

# img type
if [ $prikey_sel -gt 0 ]; then
  let img_type=$img_type+32*$prikey_sel
fi
if [ $code_encrypt -eq 1 ]; then
  let img_type=$img_type+16
fi
if [ $signature -eq 1 ]; then
  let img_type=$img_type+256
fi
if [ $sign_pubkey_src -eq 1 ]; then
  let img_type=$img_type+512
fi

echo " - image type     : $img_type"
echo " - signature      : $signature"
echo " - prikey_sel     : $prikey_sel"
echo " - code_encrypt   : $code_encrypt"
echo " - code_encrypt_k : ${CODE_ENCRYPT_KEY}(ascii:@CONFIG_W800_CODE_ENCRYPT_KEY@)"

rm -f ./*.bin ./*.dat
csky-elfabiv2-objcopy -O binary ./"$ProjName".elf ./"$ProjName".bin

if [ $code_encrypt -eq 1 ]; then
  let prikey_sel=$prikey_sel+1
  echo -n "@CONFIG_W800_CODE_ENCRYPT_KEY@" > ./encrypt_key.txt
  openssl enc -aes-128-ecb -in ./"$ProjName".bin -out ./"$ProjName"_enc.bin -K ${CODE_ENCRYPT_KEY} -iv 01010101010101010101010101010101
  openssl rsautl -encrypt -in ./encrypt_key.txt -inkey ${W800_TOOLS_DIR}/w800/ca/capub_"$prikey_sel".pem -pubin -out key_en.dat
  # combine img: app_code_enc.bin + usrkey_enc.bin + pubkey_N.bin --> app.img
  cat "$ProjName"_enc.bin key_en.dat > "$ProjName"_enc_key.bin
  cat "$ProjName"_enc_key.bin ${W800_TOOLS_DIR}/w800/ca/capub_"$prikey_sel"_N.dat > "$ProjName"_enc_key_N.bin
  ${WM_TOOL} -b ./"$ProjName"_enc_key_N.bin -o ./"$ProjName" -it $img_type -fc 0 -ra $run_img_pos -ih $run_img_header -ua $upd_img_pos -nh 0 -un 0
else
  ${WM_TOOL} -b ./"$ProjName".bin -o ./"$ProjName" -it $img_type -fc 0 -ra $run_img_pos -ih $run_img_header -ua $upd_img_pos -nh 0 -un 0
fi

mkdir -p ${DST_DIR}

rm -f ${DST_DIR}/*.img ${DST_DIR}/*.gz ${DST_DIR}/*.fls ${DST_DIR}/*.map
cp -f "./$ProjName.map" "${DST_DIR}/${ProjName}.map"

if [ $signature -eq 1 ]; then
  if [ "@CONFIG_W800_IMAGE_SIGN_PRIKEY_PATH@"x = "x" ]; then
    sign_prikey_path=${W800_TOOLS_DIR}/w800/ca/cakey.pem
    echo "!!! WARNING !!! Use default private key($sign_prikey_path) to make signature"
  else
    sign_prikey_path=${TOP_DIR}/@CONFIG_W800_IMAGE_SIGN_PRIKEY_PATH@
  fi
  # combine app.img + sign.bin as app_sign.img
  openssl dgst -sha1 ./"$ProjName".img
  openssl dgst -sign $sign_prikey_path -sha1 -out "$ProjName"_sign.dat ./"$ProjName".img
  cat ./"$ProjName".img ./"$ProjName"_sign.dat > ./"$ProjName"_sign.img
  mv ./"$ProjName"_sign.img ${DST_DIR}/"$ProjName"_sign.img
  # combine boot.img + app_sign.img
  ${WM_TOOL} -b ${W800_TOOLS_DIR}/w800/w800_secboot.bin -o ${DST_DIR}/w800_secboot -it 0 -fc 0 -ra $sec_img_pos -ih $sec_img_header -ua $upd_img_pos -nh $run_img_header -un 0
  cat ${DST_DIR}/w800_secboot.img ${DST_DIR}/"$ProjName"_sign.img > ${DST_DIR}/"$ProjName".fls
else
  mv ./"$ProjName".img ${DST_DIR}/"$ProjName".img
  # combine boot.img + app_sign.img
  ${WM_TOOL} -b ${W800_TOOLS_DIR}/w800/w800_secboot.bin -o ${DST_DIR}/w800_secboot -it 0 -fc 0 -ra $sec_img_pos -ih $sec_img_header -ua $upd_img_pos -nh $run_img_header -un 0
  cat ${DST_DIR}/w800_secboot.img ${DST_DIR}/"$ProjName".img > ${DST_DIR}/"$ProjName".fls
fi

# produce compressed ota firmware
if [ $zip_type -eq 1 ]; then
  if [ $signature -eq 1 ]; then
    ${WM_TOOL} -b ${DST_DIR}/"$ProjName"_sign.img -o ${DST_DIR}/"$ProjName"_sign -it $img_type -fc 1 -ra $run_img_pos -ih $run_img_header -ua $upd_img_pos -nh 0 -un 0
    mv ${DST_DIR}/"$ProjName"_sign_gz.img ${DST_DIR}/"$ProjName"_sign_ota.img
  else
    ${WM_TOOL} -b ${DST_DIR}/"$ProjName".img -o ${DST_DIR}/"$ProjName" -it $img_type -fc 1 -ra $run_img_pos -ih $run_img_header -ua $upd_img_pos -nh 0 -un 0
    mv ${DST_DIR}/"$ProjName"_gz.img ${DST_DIR}/"$ProjName"_ota.img
  fi
fi
